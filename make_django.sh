#!/bin/bash

source make_docker_compose.sh

read -p "Enter the Django version (default: 4.1.5): " django
django=${django:-4.1.5}

read -p "Enter the python-decouple version (default: 3.7): " python_decouple
python_decouple=${python_decouple:-3.7}

read -p "Enter the psycopg2 version (default: 2.9.5): " psycopg2
psycopg2=${psycopg2:-2.9.5}

read -p "Enter the strawberry version (default: 0.155.4): " strawberry_graphql
strawberry_graphql=${strawberry_graphql:-0.155.4}

read -p "Enter the strawberry-graphql-django version (default: 0.9.2): " strawberry_graphql_django
strawberry_graphql_django=${strawberry_graphql_django:-0.9.2}

read -p "Enter the strawberry-django-plus version (default: None): " strawberry_django_plus
strawberry_django_plus=${strawberry_django_plus:-None}

read -p "Enter the django-extensions version (default: 3.2.1): " django_extensions
django_extensions=${django_extensions:-3.2.1}

touch .env

cat << EOF > .env
POSTGRESQL_DATABASE=$postgres_database
POSTGRESQL_USER=$postgres_user
POSTGRESQL_HOST=$postgres_host
POSTGRESQL_PORT=$postgres_port
POSTGRESQL_PASSWORD=$postgres_password
EOF
pip install virtualenv

virtualenv venv

source venv/Scripts/activate

pip install django==$django python-decouple==$python_decouple psycopg2==$psycopg2 django-extensions==$django_extensions
pip install strawberry-graphql==$strawberry_graphql strawberry-graphql-django==$strawberry_graphql_django


if [ "$strawberry_django_plus" != "None" ]; 
then 
    pip install strawberry-django-plus==$strawberry_django_plus
    cat << EOF > .env
    POSTGRESQL_DATABASE=$postgres_database
    POSTGRESQL_USER=$postgres_user
    POSTGRESQL_HOST=$postgres_host
    POSTGRESQL_PORT=$postgres_port
    POSTGRESQL_PASSWORD=$postgres_password
    STRAWBERRY_DJANGO_PLUS_INSTALLED=strawberry_django_plus
EOF

fi
pip freeze > requirements.txt

django-admin startproject $project .

cat << EOF > "$project/settings.py"
"""
Django settings for ProjectAlteian project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os

from pathlib import Path

from decouple import AutoConfig

config = AutoConfig(os.environ.get("DJANGO_CONFIG_ENV_DIR"))
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5v=+2)+v0ow(*+adv8&t8(vpcl32)@zg84a@3m)lj3rdnb)rgs'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
STRAWBERRY_DJANGO_PLUS_INSTALLED=config("STRAWBERRY_DJANGO_PLUS_INSTALLED", default=None)
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'strawberry.django',
    'django_extensions',
]
if STRAWBERRY_DJANGO_PLUS_INSTALLED is not None:
    INSTALLED_APPS.append(STRAWBERRY_DJANGO_PLUS_INSTALLED)


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ProjectAlteian.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ProjectAlteian.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config("POSTGRESQL_DATABASE", default="postgres"),
        "USER": config("POSTGRESQL_USER", default="postgres"),
        "HOST": config("POSTGRESQL_HOST", default="postgres"),
        "PORT": config("POSTGRESQL_PORT", default="5432"),
        "PASSWORD": config("POSTGRESQL_PASSWORD", default=""),
        "ATOMIC_REQUESTS": True,
        "CONN_MAX_AGE": 600,
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EOF

source make_dockerfile.sh